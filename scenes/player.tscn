[gd_scene load_steps=51 format=3 uid="uid://com6fd5ykhrct"]

[ext_resource type="Script" path="res://scripts/player/player.gd" id="1_o7pwf"]
[ext_resource type="Shader" path="res://assets/shaders/edge_detection/shader.gdshader" id="2_7eeor"]
[ext_resource type="PackedScene" uid="uid://c8vahnqaf353d" path="res://scenes/backpack/backpack.tscn" id="2_ftu1l"]
[ext_resource type="Texture2D" uid="uid://n85ohutwfk0a" path="res://assets/shaders/dithering/palette_1.png" id="3_6dtlo"]
[ext_resource type="Script" path="res://scripts/player/sub_viewports.gd" id="3_usir5"]
[ext_resource type="Script" path="res://scripts/player/UIViewport.gd" id="6_c2vw8"]
[ext_resource type="Theme" uid="uid://b6x5a56bs6oov" path="res://assets/themes/ui.tres" id="7_8s8sj"]
[ext_resource type="Texture2D" uid="uid://ba1u66pq1pqov" path="res://assets/ui/power_bar_filled.png" id="7_hnq16"]
[ext_resource type="Texture2D" uid="uid://b1msi2g1wbpsx" path="res://assets/ui/power_bar.png" id="7_mvmnc"]
[ext_resource type="Texture2D" uid="uid://dnaidbtpymjor" path="res://assets/ui/hotbar_slot.png" id="8_1ktqa"]
[ext_resource type="Texture2D" uid="uid://bq3q0m8w8q6d6" path="res://assets/ui/flashlight.png" id="8_y0o0g"]
[ext_resource type="Script" path="res://scripts/power_bar.gd" id="9_txuw2"]
[ext_resource type="AudioStream" uid="uid://xy56jvbx6skm" path="res://assets/audio/radar_tick.mp3" id="10_diik7"]
[ext_resource type="Texture2D" uid="uid://n62cunvv8u14" path="res://assets/ui/e_icon.png" id="11_511jd"]
[ext_resource type="Texture2D" uid="uid://ckiqh638hwrh5" path="res://assets/ui/selected_slot.png" id="11_i1i0r"]
[ext_resource type="Texture2D" uid="uid://dphibpmijdrsi" path="res://assets/ui/radar.png" id="11_jjlj8"]
[ext_resource type="Shader" path="res://assets/shaders/colors/ui.gdshader" id="12_cu0yb"]
[ext_resource type="Texture2D" uid="uid://bcfmteswy1p7s" path="res://assets/ui/crosshair.png" id="12_ihcyb"]
[ext_resource type="Texture2D" uid="uid://i2r71xeqxy57" path="res://assets/ui/m_icon.png" id="12_o2enx"]
[ext_resource type="Texture2D" uid="uid://mnh2jp2uw5ix" path="res://assets/ui/map.png" id="12_pfnom"]
[ext_resource type="Texture2D" uid="uid://ctse4m8h6g3v4" path="res://assets/ui/b_icon.png" id="13_fcld1"]
[ext_resource type="Texture2D" uid="uid://pl6f8yqq0opm" path="res://assets/ui/backpack.png" id="14_55kkp"]
[ext_resource type="AudioStream" uid="uid://b6b0qabshagq2" path="res://assets/audio/ghost_radar_loop.mp3" id="20_v6nb1"]
[ext_resource type="AudioStream" uid="uid://cnnp0jejolpow" path="res://assets/audio/ghost_radar_start.mp3" id="20_y0ap5"]
[ext_resource type="Script" path="res://scripts/player/TextureRect.gd" id="21_3fx5b"]
[ext_resource type="AudioStream" uid="uid://dgqwxoidtfwh1" path="res://assets/audio/ghost_radar_off.mp3" id="21_cy445"]
[ext_resource type="AudioStream" uid="uid://di40twlbtb0c8" path="res://assets/audio/flashlight.mp3" id="22_b41qx"]
[ext_resource type="Script" path="res://scripts/on_screen_timer.gd" id="22_fwvhy"]
[ext_resource type="AudioStream" uid="uid://cxoxwctprao4s" path="res://assets/audio/footsteps/footsteps-1.mp3" id="24_63utq"]
[ext_resource type="Script" path="res://scripts/sound_queue.gd" id="24_vdkos"]
[ext_resource type="AudioStream" uid="uid://co4bk42ssmffe" path="res://assets/audio/footsteps/footsteps-3.mp3" id="26_hvwhh"]
[ext_resource type="AudioStream" uid="uid://c7tesquxt0t5u" path="res://assets/audio/footsteps/footsteps-2.mp3" id="26_vy5bg"]
[ext_resource type="AudioStream" uid="uid://cogiacgbrgch2" path="res://assets/audio/footsteps/footsteps-4.mp3" id="28_1g3uk"]
[ext_resource type="AudioStream" uid="uid://dkb0l25jlxdfe" path="res://assets/audio/footsteps/footsteps-5.mp3" id="29_071lx"]
[ext_resource type="AudioStream" uid="uid://chiavgqgg0p5g" path="res://assets/audio/footsteps/footsteps-6.mp3" id="30_xr3gv"]
[ext_resource type="AudioStream" uid="uid://ul836mjv8u3" path="res://assets/audio/footsteps/footsteps-7.mp3" id="31_0ny0r"]
[ext_resource type="AudioStream" uid="uid://b2kwtyprk6o5h" path="res://assets/audio/footsteps/footsteps-8.mp3" id="32_dwlp3"]
[ext_resource type="PackedScene" uid="uid://dkp0ee0b5vhfl" path="res://scenes/game_over.tscn" id="38_xge84"]

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_soasp"]
radius = 0.25
height = 1.8

[sub_resource type="Shader" id="Shader_i2kj2"]
code = "/* 
This shader is under MIT license. Feel free to use, improve and 
change this shader according to your needs and consider sharing 
the modified result to godotshaders.com.
*/

shader_type canvas_item;

uniform sampler2D u_dither_tex : repeat_enable;
uniform sampler2D u_color_tex;

uniform int u_bit_depth;
uniform float u_contrast;
uniform float u_offset;
uniform int u_dither_size;

uniform sampler2D screen_texture : hint_screen_texture, repeat_disable, filter_nearest;

void fragment() {
	// sample the screen texture at the desired output resolution (according to u_dither_size)
	// this will effectively pixelate the resulting output
	vec2 screen_size = vec2(textureSize(screen_texture, 0)) / float(u_dither_size);
	vec2 screen_sample_uv = floor(UV * screen_size) / screen_size;
	vec3 screen_col = texture(screen_texture, screen_sample_uv).rgb;
	
	// calculate pixel luminosity (https://stackoverflow.com/questions/596216/formula-to-determine-brightness-of-rgb-color)
	float lum = (screen_col.r * 0.299) + (screen_col.g * 0.587) + (screen_col.b * 0.114);
	
	// adjust with contrast and offset parameters
	float contrast = u_contrast;
	lum = (lum - 0.5 + u_offset) * contrast + 0.5;
	lum = clamp(lum, 0.0, 1.0);
	
	// reduce luminosity bit depth to give a more banded visual if desired	
	float bits = float(u_bit_depth);
	lum = floor(lum * bits) / bits;
	
	// to support multicolour palettes, we want to dither between the two colours on the palette
	// which are adjacent to the current pixel luminosity.
	// to do this, we need to determine which 'band' lum falls into, calculate the upper and lower
	// bound of that band, then later we will use the dither texture to pick either the upper or 
	// lower colour.
	
	// get the palette texture size mapped so it is 1px high (so the x value however many colour bands there are)
	ivec2 col_size = textureSize(u_color_tex, 0);
	col_size /= col_size.y;
	
	float col_x = float(col_size.x) - 1.0; // colour boundaries is 1 less than the number of colour bands
	float col_texel_size = 1.0 / col_x; // the size of one colour boundary
	
	lum = max(lum - 0.00001, 0.0); // makes sure our floor calculation below behaves when lum == 1.0
	float lum_lower = floor(lum * col_x) * col_texel_size;
	float lum_upper = (floor(lum * col_x) + 1.0) * col_texel_size;
	float lum_scaled = lum * col_x - floor(lum * col_x); // calculates where lum lies between the upper and lower bound
	
	// map the dither texture onto the screen. there are better ways of doing this that makes the dither pattern 'stick'
	// with objects in the 3D world, instead of being mapped onto the screen. see lucas pope's details posts on how he 
	// achieved this in Obra Dinn: https://forums.tigsource.com/index.php?topic=40832.msg1363742#msg1363742
	ivec2 noise_size = textureSize(u_dither_tex, 0);
	vec2 inv_noise_size = vec2(1.0 / float(noise_size.x), 1.0 / float(noise_size.y));
	vec2 noise_uv = UV * inv_noise_size * vec2(float(screen_size.x), float(screen_size.y));
	float threshold = texture(u_dither_tex, noise_uv).r;
	
	// adjust the dither slightly so min and max aren't quite at 0.0 and 1.0
	// otherwise we wouldn't get fullly dark and fully light dither patterns at lum 0.0 and 1.0
	threshold = threshold * 0.99 + 0.005;
	
	// the lower lum_scaled is, the fewer pixels will be below the dither threshold,
	// and thus will use the lower bound colour, and vice-versa
	float ramp_val = lum_scaled < threshold ? 0.0f : 1.0f;
	// sample at the lower bound colour if ramp_val is 0.0, upper bound colour if 1.0
	float col_sample = mix(lum_lower, lum_upper, ramp_val);
	vec3 final_col = texture(u_color_tex, vec2(col_sample, 0.5)).rgb;
	
	// return the final colour!
	COLOR.rgb = final_col;
}"

[sub_resource type="CompressedTexture2D" id="CompressedTexture2D_oxqji"]
load_path = "res://.godot/imported/pattern.png-ef3cfac201ae719d7f03ee1649f9098b.s3tc.ctex"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_hb05h"]
shader = SubResource("Shader_i2kj2")
shader_parameter/u_bit_depth = 32
shader_parameter/u_contrast = 1.0
shader_parameter/u_offset = null
shader_parameter/u_dither_size = 2
shader_parameter/u_dither_tex = SubResource("CompressedTexture2D_oxqji")
shader_parameter/u_color_tex = ExtResource("3_6dtlo")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_s0yu0"]
shader = ExtResource("2_7eeor")
shader_parameter/background_color = Color(0, 0, 0, 1)
shader_parameter/edge_color = Color(1, 1, 1, 1)
shader_parameter/threshold = 0.5
shader_parameter/blend = 0.01

[sub_resource type="Shader" id="Shader_uujx6"]
code = "/* 
This shader is under MIT license. Feel free to use, improve and 
change this shader according to your needs and consider sharing 
the modified result to godotshaders.com.
*/

shader_type canvas_item;

uniform sampler2D u_dither_tex : repeat_enable;
uniform sampler2D u_color_tex;

uniform int u_bit_depth;
uniform float u_contrast;
uniform float u_offset;
uniform int u_dither_size;

uniform sampler2D screen_texture : hint_screen_texture, repeat_disable, filter_nearest;

void fragment() {
	// sample the screen texture at the desired output resolution (according to u_dither_size)
	// this will effectively pixelate the resulting output
	vec2 screen_size = vec2(textureSize(screen_texture, 0)) / float(u_dither_size);
	vec2 screen_sample_uv = floor(UV * screen_size) / screen_size;
	vec3 screen_col = texture(screen_texture, screen_sample_uv).rgb;
	
	// calculate pixel luminosity (https://stackoverflow.com/questions/596216/formula-to-determine-brightness-of-rgb-color)
	float lum = (screen_col.r * 0.299) + (screen_col.g * 0.587) + (screen_col.b * 0.114);
	
	// adjust with contrast and offset parameters
	float contrast = u_contrast;
	lum = (lum - 0.5 + u_offset) * contrast + 0.5;
	lum = clamp(lum, 0.0, 1.0);
	
	// reduce luminosity bit depth to give a more banded visual if desired	
	float bits = float(u_bit_depth);
	lum = floor(lum * bits) / bits;
	
	// to support multicolour palettes, we want to dither between the two colours on the palette
	// which are adjacent to the current pixel luminosity.
	// to do this, we need to determine which 'band' lum falls into, calculate the upper and lower
	// bound of that band, then later we will use the dither texture to pick either the upper or 
	// lower colour.
	
	// get the palette texture size mapped so it is 1px high (so the x value however many colour bands there are)
	ivec2 col_size = textureSize(u_color_tex, 0);
	col_size /= col_size.y;
	
	float col_x = float(col_size.x) - 1.0; // colour boundaries is 1 less than the number of colour bands
	float col_texel_size = 1.0 / col_x; // the size of one colour boundary
	
	lum = max(lum - 0.00001, 0.0); // makes sure our floor calculation below behaves when lum == 1.0
	float lum_lower = floor(lum * col_x) * col_texel_size;
	float lum_upper = (floor(lum * col_x) + 1.0) * col_texel_size;
	float lum_scaled = lum * col_x - floor(lum * col_x); // calculates where lum lies between the upper and lower bound
	
	// map the dither texture onto the screen. there are better ways of doing this that makes the dither pattern 'stick'
	// with objects in the 3D world, instead of being mapped onto the screen. see lucas pope's details posts on how he 
	// achieved this in Obra Dinn: https://forums.tigsource.com/index.php?topic=40832.msg1363742#msg1363742
	ivec2 noise_size = textureSize(u_dither_tex, 0);
	vec2 inv_noise_size = vec2(1.0 / float(noise_size.x), 1.0 / float(noise_size.y));
	vec2 noise_uv = UV * inv_noise_size * vec2(float(screen_size.x), float(screen_size.y));
	float threshold = texture(u_dither_tex, noise_uv).r;
	
	// adjust the dither slightly so min and max aren't quite at 0.0 and 1.0
	// otherwise we wouldn't get fullly dark and fully light dither patterns at lum 0.0 and 1.0
	threshold = threshold * 0.99 + 0.005;
	
	// the lower lum_scaled is, the fewer pixels will be below the dither threshold,
	// and thus will use the lower bound colour, and vice-versa
	float ramp_val = lum_scaled < threshold ? 0.0f : 1.0f;
	// sample at the lower bound colour if ramp_val is 0.0, upper bound colour if 1.0
	float col_sample = mix(lum_lower, lum_upper, ramp_val);
	vec3 final_col = texture(u_color_tex, vec2(col_sample, 0.5)).rgb;
	
	// return the final colour!
	COLOR.rgb = final_col;
}"

[sub_resource type="CompressedTexture2D" id="CompressedTexture2D_maixx"]
load_path = "res://.godot/imported/palette_2.png-894697cd1317696dc0dbf65b2f43b874.ctex"

[sub_resource type="CompressedTexture2D" id="CompressedTexture2D_a31qm"]
load_path = "res://.godot/imported/pattern.png-ef3cfac201ae719d7f03ee1649f9098b.s3tc.ctex"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_jq5nw"]
shader = SubResource("Shader_uujx6")
shader_parameter/u_bit_depth = 32
shader_parameter/u_contrast = 1.0
shader_parameter/u_offset = null
shader_parameter/u_dither_size = 2
shader_parameter/u_dither_tex = SubResource("CompressedTexture2D_a31qm")
shader_parameter/u_color_tex = SubResource("CompressedTexture2D_maixx")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_nry6i"]

[sub_resource type="ShaderMaterial" id="ShaderMaterial_i7yrv"]
shader = ExtResource("12_cu0yb")
shader_parameter/ui_color = Color(1, 0.745098, 0.498039, 1)

[sub_resource type="ViewportTexture" id="ViewportTexture_dnxb8"]
viewport_path = NodePath("GameContainer/GameViewport/UIViewport")

[node name="player" type="CharacterBody3D"]
script = ExtResource("1_o7pwf")

[node name="collider" type="CollisionShape3D" parent="."]
shape = SubResource("CapsuleShape3D_soasp")

[node name="ghostCameraLoc" type="RemoteTransform3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.5, 0)
remote_path = NodePath("../GameContainer/GameViewport/GhostViewportContainer/GhostViewport/GhostCamera")

[node name="cameraLoc" type="RemoteTransform3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.5, 0)
remote_path = NodePath("../GameContainer/GameViewport/MainViewportContainer/MainViewport/Camera")

[node name="RayCast3D" type="RayCast3D" parent="cameraLoc"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.015721, 0)
visible = false
target_position = Vector3(0, 0, -3)
collide_with_areas = true
debug_shape_custom_color = Color(1, 0, 0, 1)
debug_shape_thickness = 5

[node name="GameContainer" type="SubViewportContainer" parent="."]
offset_right = 40.0
offset_bottom = 40.0

[node name="GameViewport" type="SubViewport" parent="GameContainer"]
handle_input_locally = false
audio_listener_enable_2d = true
audio_listener_enable_3d = true
render_target_update_mode = 4
script = ExtResource("3_usir5")

[node name="MainViewportContainer" type="SubViewportContainer" parent="GameContainer/GameViewport"]
offset_right = 512.0
offset_bottom = 512.0

[node name="MainViewport" type="SubViewport" parent="GameContainer/GameViewport/MainViewportContainer"]
handle_input_locally = false
audio_listener_enable_2d = true
audio_listener_enable_3d = true
render_target_update_mode = 4
script = ExtResource("3_usir5")

[node name="Camera" type="Camera3D" parent="GameContainer/GameViewport/MainViewportContainer/MainViewport"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.5, 0)
cull_mask = 1047553
current = true

[node name="Torch" type="SpotLight3D" parent="GameContainer/GameViewport/MainViewportContainer/MainViewport/Camera"]
light_energy = 4.0
spot_range = 17.0
spot_angle = 30.0

[node name="RadarLight" type="OmniLight3D" parent="GameContainer/GameViewport/MainViewportContainer/MainViewport/Camera"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1.80883, 0)
visible = false
light_energy = 10.0
omni_range = 10.0

[node name="FlashlightView" type="CanvasLayer" parent="GameContainer/GameViewport/MainViewportContainer/MainViewport"]

[node name="ColorRect" type="ColorRect" parent="GameContainer/GameViewport/MainViewportContainer/MainViewport/FlashlightView"]
material = SubResource("ShaderMaterial_hb05h")
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="SpectralView" type="CanvasLayer" parent="GameContainer/GameViewport/MainViewportContainer/MainViewport"]
visible = false

[node name="ColorRect" type="ColorRect" parent="GameContainer/GameViewport/MainViewportContainer/MainViewport/SpectralView"]
material = SubResource("ShaderMaterial_s0yu0")
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="GhostViewportContainer" type="SubViewportContainer" parent="GameContainer/GameViewport"]
visible = false
light_mask = 2
visibility_layer = 2
offset_right = 1920.0
offset_bottom = 1080.0

[node name="GhostViewport" type="SubViewport" parent="GameContainer/GameViewport/GhostViewportContainer"]
transparent_bg = true
handle_input_locally = false
size_2d_override = Vector2i(1920, 1080)
size_2d_override_stretch = true
render_target_update_mode = 0
script = ExtResource("3_usir5")

[node name="GhostCamera" type="Camera3D" parent="GameContainer/GameViewport/GhostViewportContainer/GhostViewport"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.5, 0)
cull_mask = 1047554
current = true

[node name="SpotLight3D" type="SpotLight3D" parent="GameContainer/GameViewport/GhostViewportContainer/GhostViewport/GhostCamera"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 6.42629)
layers = 2
light_energy = 3.0
light_cull_mask = 4294967294
spot_range = 50.0

[node name="SpectralFilter" type="CanvasLayer" parent="GameContainer/GameViewport/GhostViewportContainer"]
visible = false

[node name="ColorRect" type="ColorRect" parent="GameContainer/GameViewport/GhostViewportContainer/SpectralFilter"]
material = SubResource("ShaderMaterial_jq5nw")
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="UIViewport" type="SubViewport" parent="GameContainer/GameViewport"]
transparent_bg = true
render_target_update_mode = 4
script = ExtResource("6_c2vw8")

[node name="backpack" parent="GameContainer/GameViewport/UIViewport" instance=ExtResource("2_ftu1l")]
visible = false
top_level = true
z_index = 100
mouse_force_pass_scroll_events = false

[node name="VBoxContainer" type="VBoxContainer" parent="GameContainer/GameViewport/UIViewport"]
anchors_preset = 4
anchor_top = 0.5
anchor_bottom = 0.5
offset_left = 10.0
offset_top = -29.0
offset_right = 76.0
offset_bottom = 29.0
grow_vertical = 2
theme_override_constants/separation = 6

[node name="Power Bar" type="HBoxContainer" parent="GameContainer/GameViewport/UIViewport/VBoxContainer"]
layout_mode = 2
theme_override_constants/separation = 3

[node name="ProgressBar" type="TextureProgressBar" parent="GameContainer/GameViewport/UIViewport/VBoxContainer/Power Bar"]
layout_mode = 2
value = 50.0
fill_mode = 3
texture_under = ExtResource("7_mvmnc")
texture_progress = ExtResource("7_hnq16")
script = ExtResource("9_txuw2")

[node name="powerbar_sound_timer" type="Timer" parent="GameContainer/GameViewport/UIViewport/VBoxContainer/Power Bar"]

[node name="powerbar_sound" type="AudioStreamPlayer" parent="GameContainer/GameViewport/UIViewport/VBoxContainer/Power Bar"]
stream = ExtResource("10_diik7")
volume_db = -5.0

[node name="Mainhand" type="HBoxContainer" parent="GameContainer/GameViewport/UIViewport/VBoxContainer"]
layout_mode = 2

[node name="FlashlightBox" type="NinePatchRect" parent="GameContainer/GameViewport/UIViewport/VBoxContainer/Mainhand"]
layout_mode = 2
texture = ExtResource("8_1ktqa")
region_rect = Rect2(0.367874, 0.000366211, 31.1156, 31.6551)
patch_margin_left = 1
patch_margin_top = 4
patch_margin_right = 30
patch_margin_bottom = 28

[node name="Flashlight" type="TextureRect" parent="GameContainer/GameViewport/UIViewport/VBoxContainer/Mainhand/FlashlightBox"]
layout_mode = 2
offset_right = 32.0
offset_bottom = 32.0
texture = ExtResource("8_y0o0g")

[node name="SelectedSlot" type="TextureRect" parent="GameContainer/GameViewport/UIViewport/VBoxContainer/Mainhand/FlashlightBox"]
layout_mode = 2
offset_left = -2.0
offset_top = -2.0
offset_right = 34.0
offset_bottom = 34.0
scale = Vector2(0.98, 1)
texture = ExtResource("11_i1i0r")
stretch_mode = 2

[node name="RadarBox" type="NinePatchRect" parent="GameContainer/GameViewport/UIViewport/VBoxContainer/Mainhand"]
layout_mode = 2
texture = ExtResource("8_1ktqa")
region_rect = Rect2(0.367874, 0.000366211, 31.1156, 31.6551)
patch_margin_left = 1
patch_margin_top = 4
patch_margin_right = 30
patch_margin_bottom = 28

[node name="Flashlight" type="TextureRect" parent="GameContainer/GameViewport/UIViewport/VBoxContainer/Mainhand/RadarBox"]
layout_mode = 2
offset_right = 32.0
offset_bottom = 32.0
texture = ExtResource("11_jjlj8")

[node name="SelectedSlot" type="TextureRect" parent="GameContainer/GameViewport/UIViewport/VBoxContainer/Mainhand/RadarBox"]
visible = false
layout_mode = 0
offset_left = -2.0
offset_top = -2.0
offset_right = 34.0
offset_bottom = 34.0
scale = Vector2(0.98, 1)
texture = ExtResource("11_i1i0r")
stretch_mode = 2

[node name="NinePatchRect" type="NinePatchRect" parent="GameContainer/GameViewport/UIViewport/VBoxContainer/Mainhand"]
layout_mode = 2

[node name="E" type="TextureRect" parent="GameContainer/GameViewport/UIViewport/VBoxContainer/Mainhand/NinePatchRect"]
layout_mode = 2
offset_left = -41.0
offset_top = 10.0
offset_right = -31.0
offset_bottom = 42.0
texture = ExtResource("11_511jd")
stretch_mode = 2

[node name="Map" type="HBoxContainer" parent="GameContainer/GameViewport/UIViewport/VBoxContainer"]
layout_mode = 2

[node name="MapBox" type="NinePatchRect" parent="GameContainer/GameViewport/UIViewport/VBoxContainer/Map"]
layout_mode = 2
texture = ExtResource("8_1ktqa")
region_rect = Rect2(0.367874, 0.000366211, 31.1156, 31.6551)
patch_margin_left = 1
patch_margin_top = 4
patch_margin_right = 30
patch_margin_bottom = 28

[node name="Map" type="TextureRect" parent="GameContainer/GameViewport/UIViewport/VBoxContainer/Map/MapBox"]
layout_mode = 2
offset_left = -1.0
offset_top = -1.0
offset_right = 31.0
offset_bottom = 31.0
texture = ExtResource("12_pfnom")

[node name="NinePatchRect" type="NinePatchRect" parent="GameContainer/GameViewport/UIViewport/VBoxContainer/Map"]
layout_mode = 2
texture = ExtResource("12_o2enx")

[node name="TextureRect" type="TextureRect" parent="GameContainer/GameViewport/UIViewport/VBoxContainer/Map/NinePatchRect"]
layout_mode = 0
offset_left = -9.0
offset_top = 26.0
offset_bottom = 66.0
texture = ExtResource("12_o2enx")
stretch_mode = 2

[node name="Backpack" type="HBoxContainer" parent="GameContainer/GameViewport/UIViewport/VBoxContainer"]
layout_mode = 2

[node name="BackpackBox" type="NinePatchRect" parent="GameContainer/GameViewport/UIViewport/VBoxContainer/Backpack"]
layout_mode = 2
texture = ExtResource("8_1ktqa")
region_rect = Rect2(0.367874, 0.000366211, 31.1156, 31.6551)
patch_margin_left = 1
patch_margin_top = 4
patch_margin_right = 30
patch_margin_bottom = 28

[node name="Backpack" type="TextureRect" parent="GameContainer/GameViewport/UIViewport/VBoxContainer/Backpack/BackpackBox"]
layout_mode = 2
offset_right = 32.0
offset_bottom = 32.0
texture = ExtResource("14_55kkp")

[node name="NinePatchRect" type="NinePatchRect" parent="GameContainer/GameViewport/UIViewport/VBoxContainer/Backpack"]
layout_mode = 2
texture = ExtResource("12_o2enx")

[node name="TextureRect" type="TextureRect" parent="GameContainer/GameViewport/UIViewport/VBoxContainer/Backpack/NinePatchRect"]
layout_mode = 0
offset_left = -9.0
offset_top = 26.0
offset_bottom = 66.0
texture = ExtResource("13_fcld1")
stretch_mode = 2

[node name="Tooltip" type="HBoxContainer" parent="GameContainer/GameViewport/UIViewport"]
anchors_preset = 7
anchor_left = 0.5
anchor_top = 1.0
anchor_right = 0.5
anchor_bottom = 1.0
offset_left = -33.0
offset_top = -92.0
offset_right = 33.0
offset_bottom = -70.0
grow_horizontal = 2
grow_vertical = 0

[node name="Button" type="Label" parent="GameContainer/GameViewport/UIViewport/Tooltip"]
material = SubResource("ShaderMaterial_nry6i")
layout_mode = 2
mouse_filter = 1
theme = ExtResource("7_8s8sj")
text = "E"
horizontal_alignment = 1
vertical_alignment = 1
uppercase = true

[node name="Label" type="Label" parent="GameContainer/GameViewport/UIViewport/Tooltip"]
layout_mode = 2
mouse_filter = 1
theme = ExtResource("7_8s8sj")
text = "Q"
horizontal_alignment = 1
vertical_alignment = 1
uppercase = true

[node name="HBoxContainer" type="HBoxContainer" parent="GameContainer/GameViewport/UIViewport"]
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -1.0
offset_top = -1.0
offset_right = 1.0
offset_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="Crosshair" type="TextureRect" parent="GameContainer/GameViewport/UIViewport/HBoxContainer"]
layout_mode = 2
texture = ExtResource("12_ihcyb")

[node name="VBoxContainer2" type="VBoxContainer" parent="GameContainer/GameViewport/UIViewport"]
anchors_preset = 6
anchor_left = 1.0
anchor_top = 0.5
anchor_right = 1.0
anchor_bottom = 0.5
offset_left = -65.0
offset_top = -20.0
offset_right = -20.0
offset_bottom = 20.0
grow_horizontal = 0
grow_vertical = 2

[node name="Label" type="Label" parent="GameContainer/GameViewport/UIViewport/VBoxContainer2"]
layout_mode = 2
theme = ExtResource("7_8s8sj")
text = "0:00.00"
script = ExtResource("22_fwvhy")

[node name="VBoxContainer3" type="VBoxContainer" parent="GameContainer/GameViewport/UIViewport"]
anchors_preset = 7
anchor_left = 0.5
anchor_top = 1.0
anchor_right = 0.5
anchor_bottom = 1.0
offset_left = -20.0
offset_top = -40.0
offset_right = 20.0
grow_horizontal = 2
grow_vertical = 0

[node name="RichTextLabel" type="RichTextLabel" parent="GameContainer/GameViewport/UIViewport/VBoxContainer3"]
visible = false
layout_mode = 2
text = "Press (E) To Interact"
fit_content = true
scroll_active = false

[node name="sound_radar_off" type="AudioStreamPlayer" parent="GameContainer/GameViewport"]
stream = ExtResource("21_cy445")

[node name="sound_radar" type="AudioStreamPlayer" parent="GameContainer/GameViewport"]
stream = ExtResource("20_y0ap5")
volume_db = -10.0

[node name="sound_radar_loop" type="AudioStreamPlayer" parent="GameContainer/GameViewport"]
stream = ExtResource("20_v6nb1")
volume_db = -10.0

[node name="sound_flashlight" type="AudioStreamPlayer" parent="GameContainer/GameViewport"]
stream = ExtResource("22_b41qx")

[node name="footsteps_timer" type="Timer" parent="GameContainer/GameViewport"]
wait_time = 0.2
one_shot = true

[node name="footsteps_master" type="Node2D" parent="GameContainer/GameViewport"]
script = ExtResource("24_vdkos")

[node name="Footsteps 1" type="AudioStreamPlayer" parent="GameContainer/GameViewport/footsteps_master"]
stream = ExtResource("24_63utq")
volume_db = -6.0

[node name="Footsteps 2" type="AudioStreamPlayer" parent="GameContainer/GameViewport/footsteps_master"]
stream = ExtResource("26_vy5bg")
volume_db = -6.0

[node name="Footsteps 3" type="AudioStreamPlayer" parent="GameContainer/GameViewport/footsteps_master"]
stream = ExtResource("26_hvwhh")
volume_db = -6.0

[node name="Footsteps 4" type="AudioStreamPlayer" parent="GameContainer/GameViewport/footsteps_master"]
stream = ExtResource("28_1g3uk")
volume_db = -6.0

[node name="Footsteps 5" type="AudioStreamPlayer" parent="GameContainer/GameViewport/footsteps_master"]
stream = ExtResource("29_071lx")
volume_db = -6.0

[node name="Footsteps 6" type="AudioStreamPlayer" parent="GameContainer/GameViewport/footsteps_master"]
stream = ExtResource("30_xr3gv")
volume_db = -6.0

[node name="Footsteps 7" type="AudioStreamPlayer" parent="GameContainer/GameViewport/footsteps_master"]
stream = ExtResource("31_0ny0r")
volume_db = -6.0

[node name="Footsteps 8" type="AudioStreamPlayer" parent="GameContainer/GameViewport/footsteps_master"]
stream = ExtResource("32_dwlp3")
volume_db = -6.0

[node name="UIRect" type="TextureRect" parent="."]
texture_filter = 3
material = SubResource("ShaderMaterial_i7yrv")
offset_right = 512.0
offset_bottom = 512.0
texture = SubResource("ViewportTexture_dnxb8")
script = ExtResource("21_3fx5b")

[node name="Game over" parent="." instance=ExtResource("38_xge84")]
